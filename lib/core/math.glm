---
Adds two numbers.
---
add :: a 'Number -> b 'Number -> ffi 'Number '{ return a + b }

---
Substracts two numbers.
---
sub :: a 'Number -> b 'Number -> ffi 'Number '{ return a - b }

---
Divides two numbers. Will return a DivideByZeroError if any argument is 0.
---
div :: 0 -> _ 'Number -> Result.Err DivideByZeroError
div :: _ 'Number -> 0 -> Result.Err DivideByZeroError
div :: a 'Number -> b 'Number -> ffi 'Number '{ return Result.Ok(a / b) }

---
Multiplies two numbers.
---
mul :: a 'Number -> b 'Number -> ffi 'Number '{ return a * b }

---
Modulo. TODO: better docs.
---
mod :: _ 'Number -> 0 -> Result.Err DivideByZeroError
mod \
	:: it 'Number \
	-> mod_by 'Number \
	-> ffi {
		& 'Result 'Number 'DivideByZeroError
		'{ return Result.Ok(it % mod_by) }
	}
