?% Result
	Represents success (via Ok(Val)) and failure (via Err(Err)) of a given
	operation (as a structured alternative to using error code numbers,
	exceptions, or multi-value returns, all found in various other languages).

	Not to be confused with #?[ % Option ] .
;
% Result
	"Val" enum-generic
	"Err" enum-generic

	"Ok" "Val" enum-generic-member
	"Err" "Err" enum-generic-member
;

# TODO: docs, takes when_false when_true bool
: from_bool! ( _ _ Boolean.True -> _ ) drop swap drop Result.Ok ;
: from_bool! ( _ _ Boolean.False -> _ ) drop drop Result.Err ;
