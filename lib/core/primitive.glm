-- gluumy is copyfree software with no warranty, released under the CC0-1.0
-- public-domain-esque dedication found in COPYING in gluumy's source tree, or
-- at https://creativecommons.org/publicdomain/zero/1.0/

-- This file is basically the only place this syntax is ever used, so no need
-- to get too familiar with it unless one is hacking on gluumy's compiler or,
-- of course, these low-level shapes.
--
-- `<x> Y =>` defines a shape for a primitive type, where `x` is the identifier
-- used in the compiler, and `Y` is the name of the shape within gluumy itself
-- (following the correct naming semantics).
--
-- `self` always refers to the primitive value. `Self` always refers to the
-- shape being defined (as with any shape definition).

Printable =>
	repr { Self } -> String

DebugPrintable =>
	<= Printable

	repr_debug { Self } -> String

<string> String =>
	<= Printable
	<= DebugPrintable

	repr { self } -> self

	repr_debug { self } -> Self
	repr_debug { self } !-> return string.format("\"%s\"", self)

<number> Number =>
	<= Printable
	<= DebugPrintable

	repr { self } -> String
	repr { self } !->
		if self % 1 == 0 then
			return string.format("%d", self)
		else
			return string.format("%f", self)
		end

	repr_debug = Self.repr

<bool> Boolean =>
	<= Printable
	<= DebugPrintable

	repr { true } -> "true"
	repr { false } -> "false"

	repr_debug = Self.repr
